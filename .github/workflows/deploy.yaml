name: "üêô Build and Deploy with ArgoCD"

on:
  workflow_dispatch:
    inputs:
      app:
        description: "App to deploy"
        required: true
        type: choice
        options:
          - request-headers
          - hub

jobs:
  containerize:
    uses: ./.github/workflows/containerize.yaml
    with:
      app: ${{ inputs.app }}
  
  attest:
    needs: [containerize]
    uses: ./.github/workflows/attest.yaml
    if: ${{ github.ref == 'refs/heads/main' }}
    with:
      image: ${{ needs.containerize.outputs.image }}
      digest: ${{ needs.containerize.outputs.digest }}

  deploy:
    needs: [containerize]
    runs-on: arc-ts
    environment:
      name: ${{ inputs.app }}
      url: https://${{inputs.app}}.lolwtf.ca
    env:
      ARGOCD_URL: argo-argocd-server.argo
    steps:
      - name: Download ArgoCD CLI
        run: |
          curl -sSL -o /tmp/argocd http://${{ env.ARGOCD_URL }}/download/argocd-linux-amd64
          chmod +x /tmp/argocd
          sudo mv /tmp/argocd /usr/local/bin/argocd
      - name: Login to ArgoCD
        run: |
          echo y | argocd login --insecure --username ${{ secrets.ARGOCD_USERNAME }} --password ${{ secrets.ARGOCD_PASSWORD }} --grpc-web ${{ env.ARGOCD_URL }}
      - name: Update application revision and image to ${{ github.sha }}
        run: |
          argocd app set ${{ inputs.app }} --revision=${{ github.sha }} --kustomize-image=ghcr.io/jonpulsifer/does-not-exist=ghcr.io/${{ github.repository_owner }}/${{ inputs.app }}:${{ github.sha }}
