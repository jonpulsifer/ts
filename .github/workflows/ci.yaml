name: CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read

jobs:
  build:
    name: Build and Test
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.VERCEL_ID }}
      NEXT_TELEMETRY_DISABLED: 1
      TURBO_TELEMETRY_DISABLED: 1
    services:
      postgres:
        image: postgres:17@sha256:fe4efc6901dda0d952306fd962643d8022d7bb773ffe13fe8a21551b9276e50c
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 1s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 5432:5432
      redis:
        image: redis:alpine@sha256:c1e88455c85225310bbea54816e9c3f4b5295815e6dbf80c34d40afc6df28275
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 1s
          --health-timeout 5s
          --health-retries 10
        ports:
          - 6379:6379
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0

      - name: Setup Node.js environment
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
        with:
          node-version: 20
          cache: pnpm

      - name: Prepare db & env files
        env:
          PGPASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_MULTIPLE_DATABASES: authme,wishlist
        run: |
          ./.github/scripts/create-multiple-postgresql-databases.sh
          find . -type f -name '.env.example' -execdir cp -v {} .env \;

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test
