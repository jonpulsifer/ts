// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Account {
  id                Int     @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            Int        @id @default(autoincrement())
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  name          String?
  address       String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  pant_size     String?
  shirt_size    String?
  shoe_size     String?
  gifts         Gift[]
  claimed       Gift[]     @relation("ClaimedByUser")
  wishlists     Wishlist[]
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Gift {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  name        String     @db.VarChar(255)
  image       String?
  url         String?
  description String?
  published   Boolean    @default(false)
  owner       User       @relation(fields: [ownerId], references: [id])
  ownerId     Int
  claimed     Boolean    @default(false)
  claimedBy   User?      @relation("ClaimedByUser", fields: [claimedById], references: [id])
  claimedById Int?
  wishlists   Wishlist[]
}

model Wishlist {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @unique
  password  String
  members   User[]
  gifts     Gift[]
}
